// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String      @id @unique @default(uuid())
  first_name        String
  last_name         String
  email             String     @unique @db.VarChar(256)
  password          String
  balance           Float    @default(0.0)
  phone_number      String
  transactions_as_sender Transaction[] @relation("senderTransactions")
  transactions_as_receiver Transaction[] @relation("receiverTransactions")
  notifications Notification[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id          String      @id @unique @default(uuid())
  amount      Float
  sender_id    String
  receiver_id  String?
  sender      User     @relation("senderTransactions", fields: [sender_id], references: [id])
  receiver    User?     @relation("receiverTransactions", fields: [receiver_id], references: [id])
  createdAt   DateTime @default(now())
  transaction_type TransactionType
  transaction_status TransactionStatus
}

model Notification {
  id          String      @id @unique @default(uuid())
  userId      String
  message     String
  User        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
}

enum TransactionType{
  DEPOSIT
  TRANSFER
}

enum TransactionStatus{
  FAILED
  SUCCESSFULL
}
